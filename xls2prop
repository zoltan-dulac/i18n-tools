#!/bin/bash

FILE_NO_EXT="${1%.*}"

if [ "$#" != "2" ]
then
	echo "Usage: $0 <input-xls-file> <output-file-name-stub>" 1>&2
	echo
	echo "This will create two files, one *_en.properties and one *_fr.properties" 1>&2
	exit 1
fi

# .. First, convert xls to tab delimited format
xls2tab $1

if [ "$?" != "0" ]
then
	echo "xls2tab failed. Bailing." 1>&2
	echo 1>&2
	exit 2
fi

TAB_FILE="$FILE_NO_EXT".csv

LIST=`grep -v "^#" $TAB_FILE | grep -v "^Variable" | grep "[a-zA-Z]"`

LOCALES=`grep -i "^#\s*locale" $TAB_FILE | sed "s/^#\s*//" | sed "s/locale//" | head -1 `

echo $LOCALES

COLUMN=2
for i in $LOCALES 
do
		echo "Processing $i ..."

		echo "$LIST" | awk -v COL=$COLUMN -v LOC=$i -F"	" '
		
			function ltrim(s) { sub(/^[ \t\r\n]+/, "", s); return s }
			function rtrim(s) { sub(/[ \t\r\n]+$/, "", s); return s }
			function trim(s) { return rtrim(ltrim(s)); }
			
			{
				if ( trim($COL) == "" ) {
					ERR=sprintf("echo \"Warning: %s does not have a value for %s. Substituting variable name.\" 1>&2", $1, $LOC);
				  system(ERR);
					VAL="{{" + $1 + "}}"
				} else {
					VAL=$COL
				}
		  }
	
			{printf ("%s = %s\n",  $1, VAL)}'  > $2"_$i.properties"
			
			COLUMN=`expr $COLUMN + 1`
done

exit
